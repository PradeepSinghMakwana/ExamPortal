//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExamPortal.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExamPortalEntities : DbContext
    {
        public ExamPortalEntities()
            : base("name=ExamPortalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Loger> Logers { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Registered_Candidates> Registered_Candidates { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Student_10th_Qualification> Student_10th_Qualification { get; set; }
        public virtual DbSet<Student_12th_Qualification> Student_12th_Qualification { get; set; }
        public virtual DbSet<Student_Current_Qualification> Student_Current_Qualification { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<Subjects_In_10th> Subjects_In_10th { get; set; }
        public virtual DbSet<Subjects_In_12th> Subjects_In_12th { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<Teach> Teaches { get; set; }
        public virtual DbSet<Test> Tests { get; set; }
        public virtual DbSet<Test_Question> Test_Question { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<Student_Test_Record> Student_Test_Record { get; set; }
        public virtual DbSet<AdminLogin> AdminLogins { get; set; }
        public virtual DbSet<ClassAdminDesk> ClassAdminDesks { get; set; }
        public virtual DbSet<CourseAdminDesk> CourseAdminDesks { get; set; }
        public virtual DbSet<StudentLogin> StudentLogins { get; set; }
        public virtual DbSet<SubjectAdminDesk> SubjectAdminDesks { get; set; }
        public virtual DbSet<TeacherLogin> TeacherLogins { get; set; }
        public virtual DbSet<UnapprovedResult> UnapprovedResults { get; set; }
        public virtual DbSet<UnassignedTest> UnassignedTests { get; set; }
        public virtual DbSet<UnregisteredTest> UnregisteredTests { get; set; }
        public virtual DbSet<UserLogin> UserLogins { get; set; }
        public virtual DbSet<TeacherAdminDesk> TeacherAdminDesks { get; set; }
        public virtual DbSet<TempCreatedTest> TempCreatedTests { get; set; }
    
        public virtual ObjectResult<getUnregisteredTests_Result> getUnregisteredTests(Nullable<int> scholar_no)
        {
            var scholar_noParameter = scholar_no.HasValue ?
                new ObjectParameter("scholar_no", scholar_no) :
                new ObjectParameter("scholar_no", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUnregisteredTests_Result>("getUnregisteredTests", scholar_noParameter);
        }
    }
}
